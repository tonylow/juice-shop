import { Observable } from 'rxjs';
import { Config } from 'stryker-api/config';
import TestableMutant from '../TestableMutant';
import { File } from 'stryker-api/core';
import TranspiledMutant from '../TranspiledMutant';
import LoggingClientContext from '../logging/LoggingClientContext';
export default class MutantTranspiler {
    private transpilerChildProcess;
    private proxy;
    private currentMutatedFile;
    private unMutatedFiles;
    /**
     * Creates the mutant transpiler in a child process if one is defined.
     * Otherwise will just forward input as output in same process.
     * @param config The Stryker config
     */
    constructor(config: Config, loggingContext: LoggingClientContext);
    initialize(files: ReadonlyArray<File>): Promise<ReadonlyArray<File>>;
    transpileMutants(allMutants: TestableMutant[]): Observable<TranspiledMutant>;
    dispose(): void;
    private createTranspiledMutant;
    private transpileMutant;
}
