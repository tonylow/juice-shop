"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ChildProcessCrashedError_1 = require("./ChildProcessCrashedError");
var OutOfMemoryError = /** @class */ (function (_super) {
    tslib_1.__extends(OutOfMemoryError, _super);
    function OutOfMemoryError(pid, exitCode) {
        var _this = _super.call(this, pid, "Process " + pid + " ran out of memory", exitCode) || this;
        _this.message = "Process ";
        Error.captureStackTrace(_this, OutOfMemoryError);
        // TS recommendation: https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work
        Object.setPrototypeOf(_this, OutOfMemoryError.prototype);
        return _this;
    }
    return OutOfMemoryError;
}(ChildProcessCrashedError_1.default));
exports.default = OutOfMemoryError;
//# sourceMappingURL=OutOfMemoryError.js.map