/// <reference types="node" />
import { CoverageCollection, CoverageCollectionPerTest } from 'stryker-api/test_runner';
import { EventEmitter } from 'events';
import * as karma from 'karma';
export interface KarmaSpec {
    description: string;
    id: string;
    skipped: boolean;
    success: boolean;
    time: number;
    suite: string[];
    log: string[];
}
/**
 * This is a singleton implementation of a KarmaReporter.
 * It is loaded by
 */
export default class StrykerReporter extends EventEmitter implements karma.Reporter {
    adapters: any[];
    private constructor();
    private static _instance;
    static readonly instance: StrykerReporter;
    onSpecComplete(browser: any, spec: KarmaSpec): void;
    onRunComplete(runResult: karma.TestResults): void;
    onBrowserComplete(browser: any, result: {
        coverage: CoverageCollection | CoverageCollectionPerTest;
    }): void;
    onBrowsersReady(): void;
    onBrowserError(browser: any, error: any): void;
    onCompileError(errors: string[]): void;
    private collectRunState;
}
